<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Aria2+Rclone+OneDrive打造自己专属的离线网盘</title>
      <link href="/posts/28dc.html"/>
      <url>/posts/28dc.html</url>
      
        <content type="html"><![CDATA[<p><span style="color:red;font-size:30px;line-height:150%;">本教程实现了 下载文件到服务器，下载完成后上传到OneDrive，上传完成后自动删除留在服务器硬盘上的离线文件</span></p><p><span style="color:red;font-size:30px;line-height:150%;">前排提醒！！！本文中代码部分 <span style="color:green;font-size:30px;">#</span> 符号后面都为注释说明，这将会成为某些代码的操作说明。</span></p><h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><p>想要完美搭好这套设备 你需要以下条件：</p><ol><li>聪明的大脑</li><li>使用搜索引擎的能力</li><li>较好的语文功底</li><li>眼睛不瞎</li><li>自我解决问题的能力</li><li>提问问题前经过大脑思考</li><li>非常充足的时间（顺利的话1小时左右能搭建完成）</li><li>一台服务器（推荐配置：1CPU+4G内存+20G以上的硬盘+1Gbps带宽+无限流量），服务器主机可以在这个网站捡漏 <strong><a href="https://www.pianyivps.com/" target="_blank" rel="noopener">便宜VPS</a></strong></li><li>一台本地计算机（win10系统最好，本教程是基于win10编写）</li><li>本地ssh软件，例如Xshell</li><li>会百度一些简单的 linux 命令的使用方法</li><li>必要时需要有个本地连接外网的工具？</li></ol><h1 id="二、安装宝塔面板（非必要）"><a href="#二、安装宝塔面板（非必要）" class="headerlink" title="二、安装宝塔面板（非必要）"></a>二、安装宝塔面板（非必要）</h1><p>(1) 根据自己服务器主机型号复制对应的安装命令，<strong><a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener">官网教程</a></strong>；本人机子是CentOs7系统，所以输入</p><pre class="line-numbers language-shell"><code class="language-shell">yum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && sh install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2) 安装完成后，根据提示信息打开宝塔面板，</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819202818106.png" alt="image-20200819202818106"></p><p>(3) 然后点击首页，在弹出的框框中，选择只安装 <strong>Nginx</strong></p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819203049597.png" alt="image-20200819203049597"></p><p>（4）点击 <strong><code>安全</code></strong> 放行6800端口</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819223243504.png" alt="image-20200819223243504"></p><h1 id="三、安装Aria2"><a href="#三、安装Aria2" class="headerlink" title="三、安装Aria2"></a>三、安装Aria2</h1><p>(1) 这里使用 <a href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener">Aria2 一键安装管理脚本 增强版</a>（<a href="https://github.com/ifwlzs/aria2.sh" target="_blank" rel="noopener">打不开用这个备用地址</a>）执行下面的代码下载并运行脚本，出现脚本操作菜单输入 <code>1</code> 开始安装。</p><pre class="line-numbers language-shell"><code class="language-shell">wget -N https://raw.githubusercontent.com/P3TERX/aria2.sh/master/aria2.sh && chmod +x aria2.sh && ./aria2.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>备用的脚本：</p><pre class="line-numbers language-shell"><code class="language-shell">wget -N https://raw.githubusercontent.com/ifwlzs/aria2.sh/master/aria2.sh && chmod +x aria2.sh && ./aria2.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819203511301.png" alt="image-20200819203511301"></p><p>(2) 安装成功后，再次输入上述安装代码，这次输入数字 <code>12</code>，自动更新BT-Tracker。</p><p>(3) 执行成功后，再次输入上述安装代码，这次输入数字 <code>8</code>，记录下 <strong><code>ipv4地址</code></strong> 和 <strong><code>RPC密钥</code></strong> 后续操作需要用到。</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819211359667.png" alt="image-20200819211359667"></p><h1 id="四、安装Rclone"><a href="#四、安装Rclone" class="headerlink" title="四、安装Rclone"></a>四、安装Rclone</h1><p>（1）服务器端安装：输入下面的命令进行安装</p><pre class="line-numbers language-shell"><code class="language-shell">curl https://rclone.org/install.sh | sudo bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）本地（win10）安装rclone，下载链接：<a href="https://rclone.org/downloads/" target="_blank" rel="noopener">https://rclone.org/downloads/</a></p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819212018465.png" alt="image-20200819212018465"></p><p>（3）在本地 Win­dows 电脑上下载后，然后解压出来，解压后进入文件夹，在资源管理器地址栏输入 <code>cmd</code>，回车就会在当前路径打开命令提示符。输入以下命令：</p><pre class="line-numbers language-powershell"><code class="language-powershell">rclone authorize <span class="token string">"onedrive"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来会弹出浏览器，要求你登录账号进行授权。授权完后命令提示符窗口会出现以下信息：</p><blockquote><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token keyword">If</span> your browser doesn't open automatically go to the following link: http:<span class="token operator">/</span><span class="token operator">/</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:53682<span class="token operator">/</span>authLog in and authorize rclone <span class="token keyword">for</span> accessWaiting <span class="token keyword">for</span> code<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Got codePaste the following into your remote machine <span class="token operator">--</span><span class="token operator">-</span>><span class="token punctuation">{</span><span class="token string">"access_token"</span>:<span class="token string">"xxxxxxxx"</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 注意!复制{xxxxxxxx}整个内容，并保存好，后面需要用到</span>&lt;<span class="token operator">--</span><span class="token operator">-</span><span class="token keyword">End</span> paste<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>（4） linux上配置 Rclone</p><p><strong>TIPS:</strong> 因为 RCLONE 会时不时进行更新，当你看到这篇教程时菜单选项可能已经发生了略微的改动，但大致思路不会变，<strong>不要无脑照搬操作</strong>。</p><p>服务器里输入</p><pre class="line-numbers language-shell"><code class="language-shell">rclone config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会出现以下信息，参照下面的注释进行操作。</p><blockquote><pre class="line-numbers language-shell"><code class="language-shell">n) New remotes) Set configuration passwordq) Quit confign/s/q> n  # 选择n，新建name> OneDrive    # 输入名称，类似于标签，用于区分不同的网盘。Type of storage to configure.Enter a string value. Press Enter for the default ("").Choose a number from below, or type in your own value1 / 1Fichier  \ "fichier"                                                                  2 / Alias for an existing remote  \ "alias"                                                                    3 / Amazon Drive  \ "amazon cloud drive"                                                       4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)                                                     \ "s3"                                                                       5 / Backblaze B2  \ "b2"                                                                       6 / Box  \ "box"                                                                      7 / Cache a remote  \ "cache"                                                                    8 / Citrix Sharefile  \ "sharefile"                                                                9 / Dropbox  \ "dropbox"                                                                  10 / Encrypt/Decrypt a remote  \ "crypt"                                                                    11 / FTP Connection  \ "ftp"                                                                      12 / Google Cloud Storage (this is not Google Drive)  \ "google cloud storage"                                                     13 / Google Drive  \ "drive"                                                                    14 / Google Photos  \ "google photos"                                                            15 / Hubic  \ "hubic"                                                                    16 / In memory object storage system.  \ "memory"                                                                   17 / Jottacloud  \ "jottacloud"                                                               18 / Koofr  \ "koofr"                                                                    19 / Local Disk  \ "local"                                                                    20 / Mail.ru Cloud  \ "mailru"                                                                   21 / Mega  \ "mega"                                                                     22 / Microsoft Azure Blob Storage  \ "azureblob"                                                                23 / Microsoft OneDrive  \ "onedrive"                                                                 24 / OpenDrive  \ "opendrive"                                                                25 / OpenStack Swift (Rackspace Cloud Files, Memset Memstore, OVH)  \ "swift"                                                                    26 / Pcloud  \ "pcloud"                                                                   27 / Put.io  \ "putio"                                                                    28 / QingCloud Object Storage  \ "qingstor"29 / SSH/SFTP Connection  \ "sftp"30 / Sugarsync  \ "sugarsync"31 / Tardigrade Decentralized Cloud Storage  \ "tardigrade"32 / Transparently chunk/split large files  \ "chunker"33 / Union merges the contents of several upstream fs  \ "union"34 / Webdav  \ "webdav"35 / Yandex Disk  \ "yandex"36 / http Connection  \ "http"37 / premiumize.me  \ "premiumizeme"38 / seafile  \ "seafile"Storage> 23  # 选择23，Microsoft OneDrive** See help for onedrive backend at: https://rclone.org/onedrive/ **Microsoft App Client IdLeave blank normally.Enter a string value. Press Enter for the default ("").client_id> # 留空，回车Microsoft App Client SecretLeave blank normally.Enter a string value. Press Enter for the default ("").client_secret> # 留空，回车Edit advanced config? (y/n)y) Yesn) No (default)y/n> n  # 选nRemote configUse auto config?* Say Y if not sure* Say N if you are working on a remote or headless machiney) Yes (default)n) Noy/n> n  # 选nFor this to work, you will need rclone available on a machine that hasa web browser available.For more help and alternate methods see: https://rclone.org/remote_setup/Execute the following on the machine with the web browser (same rcloneversion recommended):       rclone authorize "onedrive"Then paste the result below:result>  {"XXXXXXXX"}  # 上面保存的token复制到这里Choose a number from below, or type in an existing value1 / OneDrive Personal or Business  \ "onedrive"                                                                 2 / Root Sharepoint site  \ "sharepoint"                                                               3 / Type in driveID  \ "driveid"                                                                  4 / Type in SiteID  \ "siteid"                                                                   5 / Search a Sharepoint site  \ "search"                                                                   Your choice> 1  # 这里问你要选择的类型，选1Found 1 drives, please select the one you want to use:0: OneDrive (business) id=xxxxxxxxxChose drive to use:> 0  # 程序找到网盘，这里编号是0，就选择0Found drive 'root' of type 'business', URL: https://sbfc6-xxxxxxx.sharepoint.com/personal/xxxxxxxxxx/DocumentsIs that okay?y) Yes (default)n) Noy/n> y  # 选y--------------------[OneDrive]type = onedrivetoken = {"xxxxxxxxx"}drive_id = xxxxxdrive_type = business--------------------y) Yes this is OK (default)e) Edit this remoted) Delete this remotey/e/d> y  # 选yCurrent remotes:Name                 Type====                 ====OneDrive             onedrivee) Edit existing remoten) New remoted) Delete remoter) Rename remotec) Copy remotes) Set configuration passwordq) Quit confige/n/d/r/c/s/q>  q  # 选q，退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>至此，Rclone 已成功连接到了 OneDrive 网盘。</p><h1 id="五、配置服务器端Aria2文件"><a href="#五、配置服务器端Aria2文件" class="headerlink" title="五、配置服务器端Aria2文件"></a>五、配置服务器端Aria2文件</h1><p>（1）nano的基础知识：</p><blockquote><ol><li>搜索某段文字：Ctrl+w 然后输入搜索的文字</li><li>保存并退出：Ctrl+x 之后输入 y 然后 回车</li></ol></blockquote><p>（2）服务器上输入</p><pre class="line-numbers language-sh"><code class="language-sh">nano /root/.aria2c/script.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开附加功能脚本配置文件进行修改，有中文注释，按照自己的实际情况进行修改，一般只需要修改网盘名称。</p><p>修改效果如下：</p><blockquote><pre class="line-numbers language-shell"><code class="language-shell"># 网盘名称(RCLONE 配置时填写的 name)drive-name=OneDrive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><p>（3）再次输入如下代码：</p><pre class="line-numbers language-shell"><code class="language-shell">nano /root/.aria2c/aria2.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开 Aria2 配置文件进行修改。找到“下载完成后执行的命令”，把<code>clean.sh</code>替换为<code>upload.sh</code>。</p><blockquote><pre class="line-numbers language-shell"><code class="language-shell"># 下载完成后执行的命令on-download-complete=/root/.aria2c/upload.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><p>（4）重启 Aria2</p><pre class="line-numbers language-shell"><code class="language-shell">service aria2 restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="六、本地安装Aria2-前端面板-AriaNg"><a href="#六、本地安装Aria2-前端面板-AriaNg" class="headerlink" title="六、本地安装Aria2 前端面板 AriaNg"></a>六、本地安装Aria2 前端面板 AriaNg</h1><p>网上的教程太多了，这里我们用最实用的方案，你只需在win上准备以下条件：</p><ol><li>本地机子能上网</li><li>有一个基于 Chromium 内核的浏览器（例如Chrome，新版edge）</li><li>能上外网（或者你可以找镜像下载插件网站也行，这里推荐个网址 <a href="https://crxdown.com/" target="_blank" rel="noopener">CrxDown</a> ）</li><li>（针对不能打开谷歌商店的朋友）百度离线安装crx插件的能力</li></ol><p>（1）安装 *<em><code>Aria2 for chrome</code> *</em>谷歌商店链接：<a href="https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn</a></p><p>插件特征ID：<strong><code>mpkodccbngfoacfalldjimigbofkhgjn</code></strong></p><h1 id="七、配置AriaNg，开启离线时代"><a href="#七、配置AriaNg，开启离线时代" class="headerlink" title="七、配置AriaNg，开启离线时代"></a>七、配置AriaNg，开启离线时代</h1><p>（1）打开插件，点击AriaNg设置，选择添加新的配置</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819222234758.png" alt="image-20200819222234758"></p><p>（2）然后注意！！根据之前生成Aria2的配置，填好下图中 框住 部分</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819222507335.png" alt="image-20200819222507335"></p><p>（3）点击 <strong><code>重新加载</code></strong> 后点 <strong><code>激活</code></strong><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819222604771.png" alt="image-20200819222604771"></p><p>（4）测试是否链接成功 失败会显示下图</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819222847440.png" alt="image-20200819222847440"></p><p>成功后会显示如下</p><p><img src="/images/loading.gif" data-original="https://gitee.com/ifwlzs/img/raw/master/img/image-20200819222950996.png" alt="image-20200819222950996"></p><p>至此，我们的离线下载系统算是彻底搭建完成了，可以自己试试效果~</p><h1 id="八、本教程参考及引用出处"><a href="#八、本教程参考及引用出处" class="headerlink" title="八、本教程参考及引用出处"></a>八、本教程参考及引用出处</h1><ol><li><p><a href="https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html" target="_blank" rel="noopener">Aria2 + Rclone 实现 OneDrive、Google Drive 等网盘离线下载</a></p></li><li><p><a href="https://www.sqyai.com/post-794.html" target="_blank" rel="noopener">Aria2 + Rclone 实现离线下载，可配置自动上传至OneDrive</a></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OneDrive </tag>
            
            <tag> vps </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Aria2 </tag>
            
            <tag> rclone </tag>
            
            <tag> 离线下载 </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Makedown的学习笔记</title>
      <link href="/posts/f4ae.html"/>
      <url>/posts/f4ae.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、认识MakeDown"><a href="#一、认识MakeDown" class="headerlink" title="一、认识MakeDown"></a>一、认识MakeDown</h1><h2 id="关于Makedown"><a href="#关于Makedown" class="headerlink" title="关于Makedown"></a>关于Makedown</h2><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。  </p><h2 id="Makedown的应用"><a href="#Makedown的应用" class="headerlink" title="Makedown的应用"></a>Makedown的应用</h2><p>Markdown 能被使用来撰写电子书，如：Gitbook。<br>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit等。</p><h2 id="Markdown-免费编辑器"><a href="#Markdown-免费编辑器" class="headerlink" title="Markdown 免费编辑器"></a>Markdown 免费编辑器</h2><p>Windows 平台：<a href="http://markdownpad.com" target="_blank" rel="noopener">MarkdownPad</a>、<a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="noopener">MarkPad</a><br>Linux 平台：<a href="http://sourceforge.net/p/retext/home/ReText/" target="_blank" rel="noopener">ReText</a><br>Mac 平台：<a href="http://mouapp.com/" target="_blank" rel="noopener">Mou</a><br>在线编辑器：<a href="http://markable.in/" target="_blank" rel="noopener">Markable.in</a>、<a href="http://dillinger.io/" target="_blank" rel="noopener">Dillinger.io</a><br>浏览器插件：<a href="https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog" target="_blank" rel="noopener">MaDe (Chrome)</a><br>高级应用：<a href="http://www.sublimetext.com/2" target="_blank" rel="noopener">Sublime Text 2</a>、<a href="http://ttscoff.github.com/MarkdownEditing/" target="_blank" rel="noopener">MarkdownEditing</a> 、<a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/" target="_blank" rel="noopener">教程</a>    </p><h1 id="二、标题"><a href="#二、标题" class="headerlink" title="二、标题"></a>二、标题</h1><p>Markdown 标题有两种格式。</p><h2 id="1、使用-和-标记一二级标题"><a href="#1、使用-和-标记一二级标题" class="headerlink" title="1、使用 = 和 - 标记一二级标题"></a>1、使用 = 和 - 标记一二级标题</h2><p>= 和 - 标记语法格式如下：</p><pre><code>这是一级标题的写法=================</code></pre><blockquote><h1 id="这是一级标题的展示"><a href="#这是一级标题的展示" class="headerlink" title="这是一级标题的展示"></a>这是一级标题的展示</h1></blockquote><pre><code>这是二级标题的写法  --------------</code></pre><blockquote><h2 id="这是二级标题的展示"><a href="#这是二级标题的展示" class="headerlink" title="这是二级标题的展示"></a>这是二级标题的展示</h2></blockquote><h2 id="2、使用-号标记"><a href="#2、使用-号标记" class="headerlink" title="2、使用 # 号标记"></a>2、使用 # 号标记</h2><p>使用 <strong><code>#</code></strong> 号可以表示1-6级标题，一级标题对应一个 <strong><code>#</code></strong> 号，二级标题对应两个 <strong><code>#</code></strong> 号，以此类推。</p><pre><code># 这是一级标题的写法</code></pre><blockquote><h1 id="这是一级标题的展示-1"><a href="#这是一级标题的展示-1" class="headerlink" title="这是一级标题的展示"></a>这是一级标题的展示</h1></blockquote><pre><code>## 这是二级标题的写法</code></pre><blockquote><h2 id="这是二级标题的展示-1"><a href="#这是二级标题的展示-1" class="headerlink" title="这是二级标题的展示"></a>这是二级标题的展示</h2></blockquote><pre><code>### 这是三级标题的写法</code></pre><blockquote><h3 id="这是三级标题的展示"><a href="#这是三级标题的展示" class="headerlink" title="这是三级标题的展示"></a>这是三级标题的展示</h3></blockquote><pre><code>#### 这是四级标题的写法</code></pre><blockquote><h4 id="这是四级标题的展示"><a href="#这是四级标题的展示" class="headerlink" title="这是四级标题的展示"></a>这是四级标题的展示</h4></blockquote><pre><code>##### 这是五级标题的写法</code></pre><blockquote><h5 id="这是五级标题的展示"><a href="#这是五级标题的展示" class="headerlink" title="这是五级标题的展示"></a>这是五级标题的展示</h5></blockquote><pre><code>###### 这是六级标题的写法</code></pre><blockquote><h6 id="这是六级标题的展示"><a href="#这是六级标题的展示" class="headerlink" title="这是六级标题的展示"></a>这是六级标题的展示</h6></blockquote><h1 id="三、段落"><a href="#三、段落" class="headerlink" title="三、段落"></a>三、段落</h1><h2 id="1、换行"><a href="#1、换行" class="headerlink" title="1、换行"></a>1、换行</h2><p>Markdown 段落没有特殊的格式，直接编写文字就行，段落的换行是<strong>使用两个以上空格加上回车</strong>或者<strong>两个段落中加入一行空行</strong>。</p><pre><code>这里是两个空格  +换行的代码</code></pre><p>显示结果如下：</p><blockquote><p>这里是两个空格<br>+换行的展示</p></blockquote><pre><code>这里是中间加个空行的代码</code></pre><p>显示结果如下：</p><blockquote><p>这里是中间加个</p><p>空行的展示</p></blockquote><h2 id="2、文本修饰"><a href="#2、文本修饰" class="headerlink" title="2、文本修饰"></a>2、文本修饰</h2><p>文本修饰样式及用法如下：</p><pre><code>*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___</code></pre><p>显示结果如下：</p><blockquote><p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></p></blockquote><h2 id="3、分隔线"><a href="#3、分隔线" class="headerlink" title="3、分隔线"></a>3、分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>**** * ******- - -----------</code></pre><p>显示效果如下：</p><blockquote><hr><hr><hr><hr><hr></blockquote><h2 id="4、删除线"><a href="#4、删除线" class="headerlink" title="4、删除线"></a>4、删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <code>~~</code> 即可，实例如下：</p><pre><code>~正常文本~~~删除文本删除文本~~~~删除文本~~</code></pre><p>显示结果如下：</p><blockquote><p><del>正常文本</del><br><del>删除文本<br>删除文本</del><br><del>删除文本</del></p></blockquote><h2 id="5、下划线"><a href="#5、下划线" class="headerlink" title="5、下划线"></a>5、下划线</h2><p>下划线可以通过HTML的 <code>&lt;u&gt;</code> 标签来实现：</p><pre><code>&lt;u&gt;带下划线文本&lt;/u&gt;</code></pre><p>显示结果如下：</p><blockquote><p><u>带下划线文本</u></p></blockquote><h2 id="6、脚注"><a href="#6、脚注" class="headerlink" title="6、脚注"></a>6、脚注</h2><p>脚注是对文本的补充说明。Markdown 脚注的格式如下:</p><pre><code>[^要注明的文本]</code></pre><p>以下实例演示了脚注的用法：</p><pre><code>创建脚注格式类似这样 [^这有啥]  [^这有啥]:啥都没有</code></pre><p>显示结果如下：</p><blockquote><p>创建脚注格式类似这样 <a href="啥都没有">^这有啥</a>  </p></blockquote><h1 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h1><p>Markdown 支持有序列表和无序列表。</p><h2 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h2><p>无序列表使用星号 <strong><code>*</code></strong> 、加号 <strong><code>+</code></strong> 或是减号 <strong><code>-</code></strong> 作为列表标记：</p><pre><code>* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><p>显示结果如下：</p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><h2 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h2><p>有序列表使用数字并加上 <code>.</code> 号来表示，如：</p><pre><code>1. 第一项2. 第二项3. 第三项</code></pre><p>显示结果如下：</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><h2 id="3、列表嵌套"><a href="#3、列表嵌套" class="headerlink" title="3、列表嵌套"></a>3、列表嵌套</h2><p>列表嵌套只需在子列表中的选项添加四个空格即可：</p><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素</code></pre><p>显示结果如下：</p><blockquote><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol></blockquote><h1 id="五、区块"><a href="#五、区块" class="headerlink" title="五、区块"></a>五、区块</h1><h2 id="1、区块引用及嵌套"><a href="#1、区块引用及嵌套" class="headerlink" title="1、区块引用及嵌套"></a>1、区块引用及嵌套</h2><p>区块引用是在段落开头使用 <strong><code>&gt;</code></strong> 符号 ，然后后面紧跟一个<strong>空格</strong>符号：</p><pre><code>&gt; 区块引用&gt; 文本内容</code></pre><p>显示结果如下：</p><hr><blockquote><p>区块引用<br>文本内容</p></blockquote><hr><p>另外区块是可以嵌套的，一个 <strong><code>&gt;</code></strong> 符号是最外层，两个 <strong><code>&gt;</code></strong> 符号是第一层嵌套，以此类推：</p><pre><code>&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套</code></pre><p>显示结果如下：</p><hr><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><hr><h2 id="2、区块中使用列表"><a href="#2、区块中使用列表" class="headerlink" title="2、区块中使用列表"></a>2、区块中使用列表</h2><p>区块中使用列表实例如下：</p><pre><code>&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项</code></pre><p>显示结果如下：</p><hr><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><hr><h2 id="3、列表中使用区块"><a href="#3、列表中使用区块" class="headerlink" title="3、列表中使用区块"></a>3、列表中使用区块</h2><p>如果要在列表项目内放进区块，那么就需要在 <strong><code>&gt;</code></strong> 前添加四个空格的缩进。</p><p>区块中使用列表实例如下：</p><pre><code>* 第一项    &gt; 1111    &gt; 2222* 第二项</code></pre><p>显示结果如下：</p><hr><ul><li>第一项<blockquote><p>1111<br>2222</p></blockquote></li><li>第二项</li></ul><hr><h1 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h1><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起 ( <strong>`</strong> ) ，例如：</p><pre><code>`printf()` 函数</code></pre><p>注：反引号在tab键上方的那个键即<code>~</code>所在的键</p><p>显示结果如下：</p><blockquote><p><code>printf()</code> 函数</p></blockquote><h2 id="1、代码区块"><a href="#1、代码区块" class="headerlink" title="1、代码区块"></a>1、代码区块</h2><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。</p><p>实例如下：</p><blockquote><pre><code>   &lt;?php   echo 'Hello Wrold';   function test(){   echo 'test';   }</code></pre></blockquote><p>显示结果：</p><hr><pre><code>&lt;?phpecho 'Hello Wrold';function test(){echo 'test';}</code></pre><hr><p>你也可以用 <strong>```</strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><blockquote><pre><code>​```javascript$(document).ready(function () {   alert('测试');});​```</code></pre></blockquote><p>显示结果如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'测试'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="七、链接"><a href="#七、链接" class="headerlink" title="七、链接"></a>七、链接</h1><h2 id="1、常用链接"><a href="#1、常用链接" class="headerlink" title="1、常用链接"></a>1、常用链接</h2><pre><code>[链接名称](链接地址)或者&lt;链接地址&gt;</code></pre><p>例如：</p><pre><code>这是一个链接 [咱的博客](https://ifwlzs.github.io)</code></pre><p>显示结果如下：</p><blockquote><p>这是一个链接 <a href="https://ifwlzs.github.io">咱的博客</a></p></blockquote><p>直接使用链接地址：</p><pre><code>&lt;https://ifwlzs.github.io&gt;</code></pre><p>显示结果如下</p><blockquote><p><a href="https://ifwlzs.github.io">https://ifwlzs.github.io</a></p></blockquote><h2 id="2、高级链接"><a href="#2、高级链接" class="headerlink" title="2、高级链接"></a>2、高级链接</h2><pre><code>链接也可以用变量来代替，文档末尾附带变量地址：这个链接用 1 作为网址变量 [Google][1]这个链接用 ifwlzs 作为网址变量 [IFWLZS][ifwlzs]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [ifwlzs]: https://github.com/ifwlzs</code></pre><p>显示结果如下:</p><blockquote><p>链接也可以用变量来代替，文档末尾附带变量地址：<br>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">Google</a><br>这个链接用 ifwlzs 作为网址变量 <a href="https://github.com/ifwlzs" target="_blank" rel="noopener">IFWLZS</a><br>然后在文档的结尾为变量赋值（网址）</p></blockquote><h1 id="八、图片"><a href="#八、图片" class="headerlink" title="八、图片"></a>八、图片</h1><p>Markdown 图片语法格式如下：</p><pre><code>![alt 属性文本](图片地址)![alt 属性文本](图片地址 "可选标题")</code></pre><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><pre><code>![我的GitHub头像](https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4)![我的GitHub头像](https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4 "头像")</code></pre><p>显示结果如下：</p><blockquote><p><img src="/images/loading.gif" data-original="https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4" alt="我的GitHub头像"></p><p><img src="/images/loading.gif" data-original="https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4" alt="我的GitHub头像" title="头像"></p></blockquote><p>当然，你也可以像网址那样对图片网址使用变量:</p><pre><code>这个链接用 1 作为网址变量 [头像][1].然后在文档的结尾为变量赋值（网址）[1]: https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4</code></pre><p>显示结果如下：</p><blockquote><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="noopener">头像</a>.<br>然后在文档的结尾为变量赋值（网址）</p></blockquote><p><strong>注意！！Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 <img> 标签</strong></p><pre><code>&lt;img src="https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4" width="200px" height="200px"&gt;</code></pre><p>显示结果如下：</p><blockquote><img src="/images/loading.gif" data-original="https://avatars1.githubusercontent.com/u/49548316?s=460&amp;v=4" width="200px" height="200px"></blockquote><h1 id="九、表格"><a href="#九、表格" class="headerlink" title="九、表格"></a>九、表格</h1><p>Markdown 制作表格使用 <strong>|</strong> 来分隔不同的单元格，使用 <strong>-</strong> 来分隔表头和其他行。</p><p>语法格式如下：</p><pre><code>|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |</code></pre><p>显示结果如下：</p><blockquote><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></blockquote><h2 id="1、对齐方式"><a href="#1、对齐方式" class="headerlink" title="1、对齐方式"></a>1、对齐方式</h2><p><strong>我们可以设置表格的对齐方式：</strong></p><ul><li><strong>-:</strong> 设置内容和标题栏居右对齐。</li><li><strong>:-</strong> 设置内容和标题栏居左对齐。</li><li><strong>:-:</strong> 设置内容和标题栏居中对齐。</li></ul><p>实例如下：</p><pre><code>| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 |</code></pre><p>显示结果如下：</p><blockquote><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table></blockquote><h1 id="十、高级教程"><a href="#十、高级教程" class="headerlink" title="十、高级教程"></a>十、高级教程</h1><h2 id="1、支持的-HTML-元素"><a href="#1、支持的-HTML-元素" class="headerlink" title="1、支持的 HTML 元素"></a>1、支持的 HTML 元素</h2><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code></code>等 ，如：</p><pre><code>使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</code></pre><p>显示结果为：</p><blockquote><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p></blockquote><h2 id="2、转义"><a href="#2、转义" class="headerlink" title="2、转义"></a>2、转义</h2><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><pre><code>**文本加粗** \*\* 正常显示星号 \*\*</code></pre><p>显示结果为：</p><blockquote><p><strong>文本加粗</strong><br>** 正常显示星号 **</p></blockquote><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   下划线{}  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号</code></pre><h2 id="3、公式"><a href="#3、公式" class="headerlink" title="3、公式"></a>3、公式</h2><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><pre><code>$$\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\\end{vmatrix}${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}$$</code></pre><p>显示结果为：</p><blockquote><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}<br>$$</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 语法 </tag>
            
            <tag> Makedown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> hello-world </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hello-world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
